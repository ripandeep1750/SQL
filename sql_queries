# SELECT :- To extraxt data from database---------------------------------------------------------------------------
SELECT CustomerName, City FROM Customers;

#* :- To return all columns-----------------------------------------------------------------------------------------
SELECT * FROM Customers;

# SELECT DISTINCT :- to return only distinct (different) values-----------------------------------------------------
SELECT DISTINCT Country FROM Customers;          # No duplicate values
SELECT Country FROM Customers:                   # Include duplicate values
SELECT COUNT(DISTINCT Country) FROM Customers;   # Return number of different countries

# WHERE :- To filter records that fulfill specified condition-------------------------------------------------------
SELECT * FROM Customers
WHERE Country = 'Mexico';

# ORDER BY :- Sort the result set in ascending or descending order--------------------------------------------------
SELECT * FROM Products
ORDER BY Price;                                  # Ascending by default

SELECT * FROM Products
ORDER BY Price DESC;

SELECT * FROM Customers
ORDER BY Country, CustomerName;                 # First order by country; if same Country then it orders by CustomerName

SELECT * FROM Customers
ORDER BY Country ASC, CustomerName DESC;

# AND :- to filter the records based on more than one condition-------------------------------------------------------
# All the conditions must be true
SELECT * FROM Customers
WHERE Country = 'Spain' AND CustomerName LIKE 'G%';

# OR :- ANY of the condition must be true -----------------------------------------------------------------------------
SELECT * FROM Customers
WHERE Country = 'Spain' OR Country = 'Germany';

SELECT * FROM Customers
WHERE Country = 'Spain' AND CustomerName LIKE 'G%' OR CustomerName LIKE 'R%';

# NOT :- combined with other operators to give opposite results--------------------------------------------------------
SELECT * FROM Customers
WHERE NOT Country = 'Spain';

SELECT * FROM Customers
WHERE CustomerID NOT BETWEEN 10 AND 60;

SELECT * FROM Customers
WHERE City NOT IN ('Paris', 'London');

# INSERT INTO :- insert new records in a table------------------------------------------------------------------------
INSERT INTO Customers (CustomerName, City, Country)
VALUES ('Cardinal', 'Stavanger', 'Norway');

# NULL :- A field with a NULL value is a field with no value.------------------------------------------------------------------
SELECT CustomerName, ContactName, Address
FROM Customers
WHERE Address IS NULL;

SELECT CustomerName, ContactName, Address
FROM Customers
WHERE Address IS NOT NULL;

# UPDATE :- used to modify the existing record in a table.--------------------------------------------------------
UPDATE Customers
SET ContactName = 'Alfred Schmidt', City= 'Frankfurt'
WHERE CustomerID = 1;  # If you omit the WHERE clause, ALL records will be updated!

# DELETE :- to delete existing records in a table.---------------------------------------------------------------
DELETE FROM Customers 
WHERE CustomerName='Alfreds Futterkiste';  # If you omit the WHERE clause, all records in the table will be deleted!

# To delete all rows , table structure, attributes, and indexes will be intact
DELETE FROM Customers; 

# To delete the table completely
DROP TABLE Customers;

# SELECT TOP :- specify the number of records to return------------------------------------------------------------
SELECT TOP 3 * FROM Customers;   # For SQL server/ MS Access

SELECT * FROM Customers
LIMIT 3;              # For MySQL 

SELECT * FROM Customers
FETCH FIRST 3 ROWS ONLY;       # For Oracle

SELECT TOP 50 PERCENT * FROM Customers;   # For SQL sever/ MS access

SELECT * FROM Customers
FETCH FIRST 50 PERCENT ROWS ONLY;   # For Oracle

# Aggregate functions :- performs a calculation on a set of values, and returns a single value. EG:- MIN(), MAX(), COUNT(), SUM(), AVG()-----------------

# MIN() :- returns the smallest value of the selected column.-----------------------------------------------------------
SELECT MIN(Price)
FROM Products;

# MAX() :- returns the largest value of the selected column.-----------------------------------------------------------------
SELECT MAX(Price)
FROM Products;

# COUNT() :- returns the number of rows that matches a specified criterion.----------------------------------------------------
SELECT COUNT(*)
FROM Products;

# SUM() :- returns the total sum of a numeric column.-----------------------------------------------------------------------
SELECT SUM(Quantity)
FROM OrderDetails;
